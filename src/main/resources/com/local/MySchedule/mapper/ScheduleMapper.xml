<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.local.MySchedule.dao.ScheduleMapper">
    <resultMap id="ScheduleResultMap" type="com.local.MySchedule.entity.Schedule">
        <result property="scheduleDate" column="schedule_date" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />

        <!-- 处理 ScheduleType 的映射 -->
        <association property="scheduleType" resultMap="TypeResultMap"/>
    </resultMap>
    <resultMap id="TypeResultMap" type="com.local.MySchedule.entity.ScheduleType">
        <result property="typeId" column="type_id" />
        <result property="typeName" column="type_name" />
        <result property="typeDescription" column="type_description" />
        <result property="bgColor" column="bg_color" />
    </resultMap>

    <!-- 根据日期查询日程，添加JOIN操作 -->
    <select id="selectSchedulesByDate" parameterType="java.time.LocalDate" resultMap="ScheduleResultMap">
        SELECT s.schedule_date, s.start_time, s.end_time, s.title, s.description, s.create_time, s.update_time,
               st.type_id, st.type_name, st.type_description, st.bg_color
        FROM schedule s
        JOIN schedule_type st ON s.type_id = st.type_id
        WHERE s.schedule_date = #{scheduleDate}
    </select>

    <!-- 根据类型查询日程，添加JOIN操作 -->
    <select id="selectSchedulesByType" parameterType="int" resultMap="ScheduleResultMap">
        SELECT s.schedule_date, s.start_time, s.end_time, s.title, s.description, s.create_time, s.update_time,
               st.type_id, st.type_name, st.type_description, st.bg_color
        FROM schedule s
        JOIN schedule_type st ON s.type_id = st.type_id
        WHERE s.type_id = #{typeId}
    </select>

    <!-- 根据类型和日期查询日程，添加JOIN操作 -->
    <select id="selectSchedulesByTypeAndDate" parameterType="map" resultMap="ScheduleResultMap">
        SELECT s.schedule_date, s.start_time, s.end_time, s.title, s.description, s.create_time, s.update_time,
               st.type_id, st.type_name, st.type_description, st.bg_color
        FROM schedule s
        JOIN schedule_type st ON s.type_id = st.type_id
        WHERE s.type_id = #{scheduleType.typeId} AND s.schedule_date = #{scheduleDate}
    </select>

    <!-- 根据时间查询日程，添加JOIN操作 -->
    <select id="selectScheduleByTime" parameterType="map" resultMap="ScheduleResultMap">
        SELECT s.schedule_date, s.start_time, s.end_time, s.title, s.description, s.create_time, s.update_time,
               st.type_id, st.type_name, st.type_description, st.bg_color
        FROM schedule s
        JOIN schedule_type st ON s.type_id = st.type_id
        WHERE s.start_time = #{startTime} AND s.end_time = #{endTime} AND s.schedule_date = #{scheduleDate}
    </select>

    <!-- 创建日程 -->
    <insert id="createSchedule" parameterType="com.local.MySchedule.entity.Schedule">
        INSERT INTO schedule (schedule_date, start_time, end_time, title, type_id, description, create_time, update_time)
        VALUES (#{scheduleDate}, #{startTime}, #{endTime}, #{title}, #{scheduleType.typeId}, #{description}, #{createTime}, #{updateTime})
    </insert>

    <!-- 更新日程 -->
    <update id="updateSchedule" parameterType="map">
        UPDATE schedule
        SET title = #{schedule.title}, 
            type_id = #{schedule.scheduleType.typeId}, 
            description = #{schedule.description}, 
            update_time = #{schedule.updateTime}
        WHERE start_time = #{startTime} AND end_time = #{endTime} AND schedule_date = #{scheduleDate}
    </update>

    <!-- 删除日程 -->
    <delete id="deleteSchedule" parameterType="map">
        DELETE FROM schedule
        WHERE start_time = #{startTime} AND end_time = #{endTime} AND schedule_date = #{scheduleDate}
    </delete>

</mapper>
